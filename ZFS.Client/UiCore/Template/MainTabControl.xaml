<UserControl x:Class="ZFS.Client.UiCore.Template.MainTabControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:local="clr-namespace:ZFS.Client.UiCore.Template"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid >
        <TabControl BorderThickness="0" Background="{StaticResource DefaultBackGround}"
                    ItemsSource="{Binding OpenPageCollection}" 
                    SelectedItem="{Binding CurrentPage}">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true"  Margin="5 0 0 0">
                                    <Border x:Name="mainBorder" BorderBrush="Transparent"  FocusVisualStyle="{x:Null}"
                                            BorderThickness="1" Background="#EFF2F4" Margin="0">
                                    </Border>
                                    <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Margin="0 0 0 5" 
                                              Focusable="False" VerticalAlignment="Center"
                                              HorizontalAlignment="Left"  RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="BorderBrush"  TargetName="mainBorder" Value="#1E90FF"/>
                                        <Setter Property="BorderThickness" TargetName="mainBorder" Value="0 0 0 2"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="false">
                                        <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding HeaderName}" FontSize="14" Margin="0 0 0 0" 
                                   VerticalAlignment="Top" HorizontalAlignment="Left" >
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextWrapping" Value="NoWrap"/>
                                    <Setter Property="TextTrimming" Value="None"/>
                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                    <Setter Property="FontSize" Value="25"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="#1E90FF"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="false">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                        <Border CornerRadius="10" Width="15" Height="15" Margin="5 0 0 0">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="#D1D1D1"/>
                                            <Setter Property="BorderBrush" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Resources>
                            <TextBlock Text="×" 
                                       Foreground="{Binding Path=BorderBrush,RelativeSource={RelativeSource 
                                Mode=FindAncestor,AncestorType={x:Type Border}}}"
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center">
                                 <i:Interaction.Triggers>
                                     <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource 
                                        FindAncestor,AncestorType={x:Type local:MainTabControl }},
                                        Path=DataContext.ExitCommand,Mode=TwoWay}" 
                                        CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                 </i:Interaction.Triggers>
                            </TextBlock>
                        </Border>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>

            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl FocusVisualStyle="{x:Null}" Content="{Binding Body}" />
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
    </Grid>
</UserControl>

